name: Run Actions for Each Version

on:
  push:
    branches:
      - "main"

jobs:
  read-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read versions from file
        id: get-versions
        run: |
          echo "Reading versions from versions.json"
          matrix=$(jq -c 'to_entries | map({service: .key, version: .value})' versions.json)
          echo "::set-output name=matrix::$matrix"

      - name: Log Matrix Before Set-Output
        run: |
           echo "Matrix before set-output: ${{ steps.get-versions.outputs.matrix }}"

      - name: Set matrix
        id: set-matrix
        run: |
          echo "Matrix before setting output: ${{ steps.get-versions.outputs.matrix }}"
          echo "::set-output name=matrix::$matrix"
      
      - name: Log Matrix After Set-Output
        run: | 
          echo "Matrix after set-output: ${{ steps.set-matrix.outputs.matrix }}"

  process-versions:
    needs: read-versions
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.read-versions.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log Matrix in process-versions
        run: |
          echo "Matrix in process-versions: ${{ fromJson(needs.read-versions.outputs.matrix) }}"

      - name: Echo Version
        run: echo "Processing ${{ matrix.service }} version ${{ matrix.version }}"

      - name: Example Action
        run: |
          echo ${{ matrix.service }}
          echo ${{ matrix.version }}
