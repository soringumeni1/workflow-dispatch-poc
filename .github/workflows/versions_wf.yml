name: Deploy on Service Version Change

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # Fetch all branches to ensure previous commit is available
        fetch-depth: 0

      - name: Get previous commit hash
        id: previous_commit
        run: |
          previous_commit_hash=$(git rev-parse HEAD^)
          echo "::set-output name=commit_hash::${previous_commit_hash}"

      - name: Get current versions
        id: current_versions
        run: |
          current_versions=$(cat versions.json | jq -r '.')
          echo "::set-output name=current_versions::${current_versions}"

      - name: Get previous versions (using environment variable)
        id: previous_versions
        env:
          PREVIOUS_COMMIT_HASH: ${{ steps.previous_commit.outputs.commit_hash }}
        run: |
          previous_versions=$(git show $PREVIOUS_COMMIT_HASH:versions.json | jq -r '.')
          echo "previous_versions: $previous_versions"  # for debugging purposes (optional)

      - name: Check for version changes
        id: version_check
        run: |
          current_versions=$(echo "${{ steps.current_versions.outputs.current_versions }}")
          previous_versions=$(echo "${previous_versions}")  # Use output directly from previous step
          if [[ "$current_versions" != "$previous_versions" ]]; then
            echo "::set-output name=should_deploy::true"
          else
            echo "::set-output name=should_deploy::false"
          fi

      - name: Run deployment job (conditional)
        if: steps.version_check.outputs.should_deploy == 'true'
        run: |
          # Your deployment commands here
          echo "Deploying... (Version change detected)"
